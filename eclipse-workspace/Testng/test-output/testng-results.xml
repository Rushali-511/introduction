<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="1" total="11" passed="9">
  <reporter-output>
  </reporter-output>
  <suite name="Loan" duration-ms="125" started-at="2020-12-06T17:34:32Z" finished-at="2020-12-06T17:34:32Z">
    <groups>
      <group name="Smoke">
        <method signature="test1.demo10()[pri:0, instance:test.test1@2a2d45ba]" name="demo10" class="test.test1"/>
      </group> <!-- Smoke -->
    </groups>
    <test name="wipro" duration-ms="63" started-at="2020-12-06T17:34:32Z" finished-at="2020-12-06T17:34:32Z">
      <class name="test.day3">
        <test-method status="PASS" signature="dem1()[pri:0, instance:test.day3@68c4039c]" name="dem1" duration-ms="9" started-at="2020-12-06T17:34:32Z" finished-at="2020-12-06T17:34:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dem1 -->
        <test-method status="PASS" signature="demo1(java.lang.String)[pri:0, instance:test.day3@68c4039c]" name="demo1" duration-ms="7" started-at="2020-12-06T17:34:32Z" finished-at="2020-12-06T17:34:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[google.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo1 -->
      </class> <!-- test.day3 -->
    </test> <!-- wipro -->
    <test name="psb" duration-ms="125" started-at="2020-12-06T17:34:32Z" finished-at="2020-12-06T17:34:32Z">
      <class name="test.test1">
        <test-method status="PASS" signature="demo1()[pri:0, instance:test.test1@2a2d45ba]" name="demo1" is-config="true" duration-ms="22" started-at="2020-12-06T17:34:32Z" finished-at="2020-12-06T17:34:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo1 -->
        <test-method status="PASS" signature="demo()[pri:0, instance:test.test1@2a2d45ba]" name="demo" duration-ms="5" started-at="2020-12-06T17:34:32Z" finished-at="2020-12-06T17:34:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
        <test-method status="PASS" signature="demo10()[pri:0, instance:test.test1@2a2d45ba]" name="demo10" duration-ms="1" started-at="2020-12-06T17:34:32Z" finished-at="2020-12-06T17:34:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo10 -->
      </class> <!-- test.test1 -->
      <class name="test.test2">
        <test-method status="PASS" signature="demo4()[pri:0, instance:test.test2@2a5ca609]" name="demo4" is-config="true" duration-ms="1" started-at="2020-12-06T17:34:32Z" finished-at="2020-12-06T17:34:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo4 -->
        <test-method status="PASS" signature="MobilesignimcarLoan(java.lang.String, java.lang.String)[pri:0, instance:test.test2@2a5ca609]" name="MobilesignimcarLoan" duration-ms="9" started-at="2020-12-06T17:34:32Z" finished-at="2020-12-06T17:34:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[google.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilesignimcarLoan -->
        <test-method status="PASS" signature="demo2(java.lang.String, java.lang.String)[pri:0, instance:test.test2@2a5ca609]" name="demo2" duration-ms="4" started-at="2020-12-06T17:34:32Z" data-provider="takedata" finished-at="2020-12-06T17:34:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[fun]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fpd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo2 -->
        <test-method status="PASS" signature="demo2(java.lang.String, java.lang.String)[pri:0, instance:test.test2@2a5ca609]" name="demo2" duration-ms="4" started-at="2020-12-06T17:34:32Z" data-provider="takedata" finished-at="2020-12-06T17:34:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2un]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2pd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo2 -->
        <test-method status="PASS" signature="demo2(java.lang.String, java.lang.String)[pri:0, instance:test.test2@2a5ca609]" name="demo2" duration-ms="5" started-at="2020-12-06T17:34:32Z" data-provider="takedata" finished-at="2020-12-06T17:34:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3un]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3pd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo2 -->
      </class> <!-- test.test2 -->
      <class name="test.day4">
        <test-method status="PASS" signature="demo()[pri:0, instance:test.day4@20e2cbe0]" name="demo" duration-ms="2" started-at="2020-12-06T17:34:32Z" finished-at="2020-12-06T17:34:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
        <test-method status="FAIL" signature="demo1()[pri:0, instance:test.day4@20e2cbe0]" name="demo1" duration-ms="4" started-at="2020-12-06T17:34:32Z" finished-at="2020-12-06T17:34:32Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at test.day4.demo1(day4.java:26)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo1 -->
      </class> <!-- test.day4 -->
    </test> <!-- psb -->
  </suite> <!-- Loan -->
</testng-results>
